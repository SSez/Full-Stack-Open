{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/db.js","App.js","index.js"],"names":["Filter","props","value","filter","onChange","handleFilter","PersonForm","onSubmit","addPerson","newName","handlePersonChange","newNumber","handleNumberChange","type","Persons","personList","persons","person","name","toLowerCase","includes","mapPersons","map","x","number","data-id","id","onClick","deletePerson","Notification","note","className","message","URL","axios","get","then","response","data","newObject","post","delete","put","App","useState","setPersons","setNewName","setNewNumber","nameFilter","setNameFilter","setMessage","useEffect","Service","initialPersons","event","target","preventDefault","personObject","length","some","setTimeout","window","confirm","find","index","findIndex","personObj","catch","error","console","returnedPerson","concat","getAttribute","splice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8295aa36.chunk.js","sourcesContent":["import React from 'react'\nconst Filter = (props) => {\n  return (\n      <div>\n          filter shown with: <input value={props.filter} onChange={props.handleFilter} />\n      </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.addPerson}>\n      <div>name: <input value={props.newName} onChange={props.handlePersonChange} /></div>\n      <div>number: <input value={props.newNumber} onChange={props.handleNumberChange} /></div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = (props) => {\n  let personList = props.persons\n  if(props.filter) {\n    personList = personList.filter((person) => {\n        return person.name.toLowerCase().includes(props.filter.toLowerCase())\n    })\n  }\n  const mapPersons = personList.map( (x) => <p key={x.id}>{x.name} {x.number} <button data-id={x.id} onClick={props.deletePerson}>Delete</button></p> )\n  return (\n    <div>{mapPersons}</div>\n  )\n}\n\nexport default Persons","import React from 'react'\n\nconst Notification = ({ note }) => {\n  if (note === null) {\n    return null\n  }\n  return (\n    <div className={note.type}>\n      {note.message}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\n\nconst URL = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(URL)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(URL, newObject)\n  return request.then(response => response.data)\n}\n\nconst del = (id) => {\n  const request = axios.delete(`${URL}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${URL}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { \n  getAll, create, del, update\n}","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from \"./components/Notification\"\nimport Service from './services/db'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName ] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [nameFilter, setNameFilter] = useState('')\n  const [message, setMessage] = useState(null)\n\n  useEffect(() => { Service.getAll().then(initialPersons => { setPersons(initialPersons) })}, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      id: persons.length + 1,\n      name: newName,\n      number: newNumber\n    }\n    if (persons.some(person => person.name === newName)) {\n      if (persons.some(person => person.number === newNumber)) {\n        setMessage({\n          message: `${newName} is already added to phonebook`,\n          type: \"error\"\n        })\n        setTimeout(() => { setMessage(null) }, 5000)\n      } else if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const id = persons.find(x => x.name === newName).id\n        //const index = persons.findIndex(x => x.id === Number(id))\n        const index = persons.findIndex(x => x.id === id)\n        Service.update(id, personObject).then(() => {\n          let personObj = [...persons]\n          personObj[index] = personObject\n          personObj[index].id = id\n          setPersons(personObj)\n          setMessage({\n            message: `updated ${newName} number to ${newNumber}`,\n            type: \"success\"\n          })\n          setTimeout(() => { setMessage(null) }, 5000)\n        }).catch((error) => {\n          console.error(error)\n          setMessage({\n            message: `Failed to update ${newName} number`,\n            type: \"error\"\n          })\n          setTimeout(() => { setMessage(null) }, 5000)\n        })\n      }\n    } else {\n      Service.create(personObject).then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        setMessage({\n          message: `${newName} added to phonebook`,\n          type: \"success\"\n        })\n        setTimeout(() => { setMessage(null) }, 5000)\n      }).catch((error) => {\n        console.error(error.response.data)\n        /*\n        setMessage({\n          message: `Failed to add ${newName} phonebook`,\n          type: \"error\"\n        })\n        */\n        setMessage({\n          message: error.response.data.error,\n          type: \"error\"\n        })\n        setTimeout(() => { setMessage(null) }, 5000)\n      })\n    }\n  }\n\n  const deletePerson = (event) => {\n    event.preventDefault()\n    let id = event.target.getAttribute(\"data-id\")\n    //const index = persons.findIndex(x => x.id === Number(id))\n    const index = persons.findIndex(x => x.id === id)\n    if(window.confirm(`Delete ${persons[index].name} ?`)) {\n      Service.del(id).then(() => {\n        let personObj = [...persons]\n        personObj.splice(index, 1)\n        setPersons(personObj)\n        setMessage({\n          message: `Succesfully removed ${persons[index].name} from phonebook`,\n          type: \"success\"\n        })\n        setTimeout(() => { setMessage(null) }, 5000)\n      }).catch((error) => {\n        console.error(error)\n        setMessage({\n          message: `Information of ${persons[index].name} has already been removed from the server.`,\n          type: \"error\"\n        })\n        setTimeout(() => { setMessage(null) }, 5000)\n    })\n    }\n  }\n\n  const handlePersonChange = (event) => { setNewName(event.target.value) }\n  const handleNumberChange = (event) => { setNewNumber(event.target.value) }\n  const handleNameFilter = (event) => { setNameFilter(event.target.value) }\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification note={message} />\n      <Filter filter={nameFilter} handleFilter={handleNameFilter} />\n      <h3>Add a new</h3>\n      <PersonForm newName={newName} newNumber={newNumber} addPerson={addPerson} handleNumberChange={handleNumberChange} handlePersonChange={handlePersonChange} />\n      <h3>Numbers</h3>\n      <Persons persons={persons} filter={nameFilter} deletePerson={deletePerson}  />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}